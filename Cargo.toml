# You must change these to your own details.
[package]
name = "chip8-emulator"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["Anh Tuan Tran <nhanhnhanh17399@gmail.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2018"
license = "MIT OR Apache-2.0"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.58"
fixedbitset = "0.2.0"
arrayvec = "0.5.1"
wasm-bindgen-futures = "0.4.8"
js-sys = "0.3.35"
gloo = "0.2.0"
rand = "0.7.3"
getrandom = { version = "0.1.14", features = ["wasm-bindgen"] }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.35"
features = [
  "console",
  "Performance",
  "Window",
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'CanvasRenderingContext2d',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'KeyboardEvent',
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.6"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.8"
